From 6c819c00e4d25372a406319b5ea2902ef1ba4ce2 Mon Sep 17 00:00:00 2001
From: Brett Mastbergen <brettm@minim.com>
Date: Wed, 16 Nov 2022 11:18:16 -0500
Subject: [PATCH] wps-hotplug.sh: Blink leds during wps discovery

SW-2701
---
 .../services/hostapd/files/wps-hotplug.sh     | 54 +++++++++++--------
 1 file changed, 32 insertions(+), 22 deletions(-)

diff --git a/package/network/services/hostapd/files/wps-hotplug.sh b/package/network/services/hostapd/files/wps-hotplug.sh
index 073bdd1868..db7b1efda8 100644
--- a/package/network/services/hostapd/files/wps-hotplug.sh
+++ b/package/network/services/hostapd/files/wps-hotplug.sh
@@ -1,5 +1,33 @@
 #!/bin/sh
 
+wps_flash_leds() {
+	local ubusobjs=$1
+	local finished=0
+
+	STATE=$(/sbin/leds.sh led_get_state)
+
+	/sbin/leds.sh led_wps
+
+	. /usr/share/libubox/jshn.sh
+	while [ $finished -eq 0 ]; do
+		for ubusobj in $ubusobjs; do
+			json_init
+			json_load "$(ubus -S call $ubusobj wps_status)"
+			json_get_vars pbc_status
+			[ "$pbc_status" = "Timed-out" -o "$pbc_status" = "Disabled" ] && {
+				finished=1
+			}
+		done
+		sleep 1
+	done
+
+	if [ "$STATE" = "led_off" ] ; then
+		/sbin/leds.sh led_wlan_off
+	else
+		/sbin/leds.sh led_wlan
+	fi
+}
+
 wps_catch_credentials() {
 	local iface ifaces ifc ifname ssid encryption key radio radios
 	local found=0
@@ -39,31 +67,13 @@ wps_catch_credentials() {
 }
 
 if [ "$ACTION" = "released" ] && [ "$BUTTON" = "wps" ]; then
-	# If the button was pressed for 3 seconds or more, trigger WPS on
-	# wpa_supplicant only, no matter if hostapd is running or not.  If
-	# was pressed for less than 3 seconds, try triggering on
-	# hostapd. If there is no hostapd instance to trigger it on or WPS
-	# is not enabled on them, trigger it on wpa_supplicant.
-	if [ "$SEEN" -lt 3 ] ; then
-		wps_done=0
-		ubusobjs="$( ubus -S list hostapd.* )"
-		for ubusobj in $ubusobjs; do
-			ubus -S call $ubusobj wps_start && wps_done=1
-		done
-		[ $wps_done = 0 ] || return 0
-	fi
 	wps_done=0
-	ubusobjs="$( ubus -S list wpa_supplicant.* )"
+	ubusobjs="$( ubus -S list hostapd.* )"
 	for ubusobj in $ubusobjs; do
-		ifname="$(echo $ubusobj | cut -d'.' -f2 )"
-		multi_ap=""
-		if [ -e "/var/run/wpa_supplicant-${ifname}.conf.is_multiap" ]; then
-			ubus -S call $ubusobj wps_start '{ "multi_ap": true }' && wps_done=1
-		else
-			ubus -S call $ubusobj wps_start && wps_done=1
-		fi
+		ubus -S call $ubusobj wps_start && wps_done=1
 	done
-	[ $wps_done = 0 ] || wps_catch_credentials &
+
+	[ $wps_done = 0 ] || wps_flash_leds "$ubusobjs" &
 fi
 
 return 0
-- 
2.30.2

