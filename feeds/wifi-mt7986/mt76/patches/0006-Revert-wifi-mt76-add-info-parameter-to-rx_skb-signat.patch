From aff1b1a0bba1c5110d786906b4eb87725f000319 Mon Sep 17 00:00:00 2001
From: Brett Mastbergen <brettm@minim.com>
Date: Thu, 2 Mar 2023 11:14:52 -0500
Subject: [PATCH 6/7] Revert "wifi: mt76: add info parameter to rx_skb
 signature"

This reverts commit 1361519851f389ed70a53ae92100be7f4db06166.
---
 dma.c           |  8 ++++----
 mt76.h          |  2 +-
 mt7603/dma.c    |  2 +-
 mt7603/mt7603.h |  2 +-
 mt7615/mac.c    |  2 +-
 mt7615/mt7615.h |  2 +-
 mt76x02.h       |  2 +-
 mt76x02_txrx.c  |  2 +-
 mt7915/mac.c    | 44 ++++++--------------------------------------
 mt7915/mt7915.h |  2 +-
 mt7921/mac.c    |  2 +-
 mt7921/mt7921.h |  2 +-
 sdio.c          |  2 +-
 usb.c           |  2 +-
 14 files changed, 22 insertions(+), 54 deletions(-)

diff --git a/dma.c b/dma.c
index ae22b959..d37dc810 100644
--- a/dma.c
+++ b/dma.c
@@ -750,7 +750,7 @@ mt76_dma_rx_reset(struct mt76_dev *dev, enum mt76_rxq_id qid)
 
 static void
 mt76_add_fragment(struct mt76_dev *dev, struct mt76_queue *q, void *data,
-		  int len, bool more, u32 info)
+		  int len, bool more)
 {
 	struct sk_buff *skb = q->rx_head;
 	struct skb_shared_info *shinfo = skb_shinfo(skb);
@@ -770,7 +770,7 @@ mt76_add_fragment(struct mt76_dev *dev, struct mt76_queue *q, void *data,
 
 	q->rx_head = NULL;
 	if (nr_frags < ARRAY_SIZE(shinfo->frags))
-		dev->drv->rx_skb(dev, q - dev->q_rx, skb, &info);
+		dev->drv->rx_skb(dev, q - dev->q_rx, skb);
 	else
 		dev_kfree_skb(skb);
 }
@@ -822,7 +822,7 @@ mt76_dma_rx_process(struct mt76_dev *dev, struct mt76_queue *q, int budget)
 		}
 
 		if (q->rx_head) {
-			mt76_add_fragment(dev, q, data, len, more, info);
+			mt76_add_fragment(dev, q, data, len, more);
 			continue;
 		}
 
@@ -846,7 +846,7 @@ mt76_dma_rx_process(struct mt76_dev *dev, struct mt76_queue *q, int budget)
 			continue;
 		}
 
-		dev->drv->rx_skb(dev, q - dev->q_rx, skb, &info);
+		dev->drv->rx_skb(dev, q - dev->q_rx, skb);
 		continue;
 
 free_frag:
diff --git a/mt76.h b/mt76.h
index 64a43112..7b88dea1 100644
--- a/mt76.h
+++ b/mt76.h
@@ -444,7 +444,7 @@ struct mt76_driver_ops {
 	bool (*rx_check)(struct mt76_dev *dev, void *data, int len);
 
 	void (*rx_skb)(struct mt76_dev *dev, enum mt76_rxq_id q,
-		       struct sk_buff *skb, u32 *info);
+		       struct sk_buff *skb);
 
 	void (*rx_poll_complete)(struct mt76_dev *dev, enum mt76_rxq_id q);
 
diff --git a/mt7603/dma.c b/mt7603/dma.c
index 06a9e6ec..590cff9d 100644
--- a/mt7603/dma.c
+++ b/mt7603/dma.c
@@ -69,7 +69,7 @@ free:
 }
 
 void mt7603_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info)
+			 struct sk_buff *skb)
 {
 	struct mt7603_dev *dev = container_of(mdev, struct mt7603_dev, mt76);
 	__le32 *rxd = (__le32 *)skb->data;
diff --git a/mt7603/mt7603.h b/mt7603/mt7603.h
index 7c3be596..0fd46d90 100644
--- a/mt7603/mt7603.h
+++ b/mt7603/mt7603.h
@@ -244,7 +244,7 @@ int mt7603_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
 void mt7603_tx_complete_skb(struct mt76_dev *mdev, struct mt76_queue_entry *e);
 
 void mt7603_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info);
+			 struct sk_buff *skb);
 void mt7603_rx_poll_complete(struct mt76_dev *mdev, enum mt76_rxq_id q);
 void mt7603_sta_ps(struct mt76_dev *mdev, struct ieee80211_sta *sta, bool ps);
 int mt7603_sta_add(struct mt76_dev *mdev, struct ieee80211_vif *vif,
diff --git a/mt7615/mac.c b/mt7615/mac.c
index a9560247..305bf182 100644
--- a/mt7615/mac.c
+++ b/mt7615/mac.c
@@ -1666,7 +1666,7 @@ bool mt7615_rx_check(struct mt76_dev *mdev, void *data, int len)
 EXPORT_SYMBOL_GPL(mt7615_rx_check);
 
 void mt7615_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info)
+			 struct sk_buff *skb)
 {
 	struct mt7615_dev *dev = container_of(mdev, struct mt7615_dev, mt76);
 	__le32 *rxd = (__le32 *)skb->data;
diff --git a/mt7615/mt7615.h b/mt7615/mt7615.h
index 43739ecf..1080d202 100644
--- a/mt7615/mt7615.h
+++ b/mt7615/mt7615.h
@@ -514,7 +514,7 @@ void mt7615_tx_worker(struct mt76_worker *w);
 void mt7615_tx_token_put(struct mt7615_dev *dev);
 bool mt7615_rx_check(struct mt76_dev *mdev, void *data, int len);
 void mt7615_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info);
+			 struct sk_buff *skb);
 void mt7615_sta_ps(struct mt76_dev *mdev, struct ieee80211_sta *sta, bool ps);
 int mt7615_mac_sta_add(struct mt76_dev *mdev, struct ieee80211_vif *vif,
 		       struct ieee80211_sta *sta);
diff --git a/mt76x02.h b/mt76x02.h
index 3f2a9b7f..849c2644 100644
--- a/mt76x02.h
+++ b/mt76x02.h
@@ -187,7 +187,7 @@ int mt76x02_set_rts_threshold(struct ieee80211_hw *hw, u32 val);
 void mt76x02_remove_hdr_pad(struct sk_buff *skb, int len);
 bool mt76x02_tx_status_data(struct mt76_dev *mdev, u8 *update);
 void mt76x02_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			  struct sk_buff *skb, u32 *info);
+			  struct sk_buff *skb);
 void mt76x02_rx_poll_complete(struct mt76_dev *mdev, enum mt76_rxq_id q);
 irqreturn_t mt76x02_irq_handler(int irq, void *dev_instance);
 void mt76x02_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control,
diff --git a/mt76x02_txrx.c b/mt76x02_txrx.c
index d8bc4ae1..3a313075 100644
--- a/mt76x02_txrx.c
+++ b/mt76x02_txrx.c
@@ -33,7 +33,7 @@ void mt76x02_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control,
 EXPORT_SYMBOL_GPL(mt76x02_tx);
 
 void mt76x02_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			  struct sk_buff *skb, u32 *info)
+			  struct sk_buff *skb)
 {
 	struct mt76x02_dev *dev = container_of(mdev, struct mt76x02_dev, mt76);
 	void *rxwi = skb->data;
diff --git a/mt7915/mac.c b/mt7915/mac.c
index 97a19bdb..167aad9e 100644
--- a/mt7915/mac.c
+++ b/mt7915/mac.c
@@ -165,9 +165,9 @@ static void mt7915_mac_sta_poll(struct mt7915_dev *dev)
 		sta = container_of((void *)msta, struct ieee80211_sta,
 				   drv_priv);
 		for (i = 0; i < IEEE80211_NUM_ACS; i++) {
-			u8 queue = mt76_connac_lmac_mapping(i);
-			u32 tx_cur = tx_time[queue];
-			u32 rx_cur = rx_time[queue];
+			u8 q = mt76_connac_lmac_mapping(i);
+			u32 tx_cur = tx_time[q];
+			u32 rx_cur = rx_time[q];
 			u8 tid = ac_to_tid[i];
 
 			if (!tx_cur && !rx_cur)
@@ -245,38 +245,8 @@ void mt7915_mac_enable_rtscts(struct mt7915_dev *dev,
 		mt76_clear(dev, addr, BIT(5));
 }
 
-static void
-mt7915_wed_check_ppe(struct mt7915_dev *dev, struct mt76_queue *q,
-		     struct mt7915_sta *msta, struct sk_buff *skb,
-		     u32 info)
-{
-	struct ieee80211_vif *vif;
-	struct wireless_dev *wdev;
-	u32 hash, reason;
-
-	if (!msta || !msta->vif)
-		return;
-
-	if (!(q->flags & MT_QFLAG_WED) ||
-	    FIELD_GET(MT_QFLAG_WED_TYPE, q->flags) != MT76_WED_Q_RX)
-		return;
-
-	if (!(info & MT_DMA_INFO_PPE_VLD))
-		return;
-
-	vif = container_of((void *)msta->vif, struct ieee80211_vif,
-			   drv_priv);
-	wdev = ieee80211_vif_to_wdev(vif);
-	skb->dev = wdev->netdev;
-
-	reason = FIELD_GET(MT_DMA_PPE_CPU_REASON, info);
-	hash = FIELD_GET(MT_DMA_PPE_ENTRY, info);
-	mtk_wed_device_ppe_check(&dev->mt76.mmio.wed, skb, reason, hash);
-}
-
 static int
-mt7915_mac_fill_rx(struct mt7915_dev *dev, struct sk_buff *skb,
-		   enum mt76_rxq_id q, u32 *info)
+mt7915_mac_fill_rx(struct mt7915_dev *dev, struct sk_buff *skb)
 {
 	struct mt76_rx_status *status = (struct mt76_rx_status *)skb->cb;
 	struct mt76_phy *mphy = &dev->mt76.phy;
@@ -543,8 +513,6 @@ mt7915_mac_fill_rx(struct mt7915_dev *dev, struct sk_buff *skb,
 		}
 	} else {
 		status->flag |= RX_FLAG_8023;
-		mt7915_wed_check_ppe(dev, &dev->mt76.q_rx[q], msta, skb,
-				     *info);
 	}
 
 	if (rxv && mode >= MT_PHY_TYPE_HE_SU && !(status->flag & RX_FLAG_8023))
@@ -1128,7 +1096,7 @@ bool mt7915_rx_check(struct mt76_dev *mdev, void *data, int len)
 }
 
 void mt7915_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info)
+			 struct sk_buff *skb)
 {
 	struct mt7915_dev *dev = container_of(mdev, struct mt7915_dev, mt76);
 	__le32 *rxd = (__le32 *)skb->data;
@@ -1162,7 +1130,7 @@ void mt7915_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
 		dev_kfree_skb(skb);
 		break;
 	case PKT_TYPE_NORMAL:
-		if (!mt7915_mac_fill_rx(dev, skb, q, info)) {
+		if (!mt7915_mac_fill_rx(dev, skb)) {
 			mt76_rx(&dev->mt76, q, skb);
 			return;
 		}
diff --git a/mt7915/mt7915.h b/mt7915/mt7915.h
index f4c20588..015c7190 100644
--- a/mt7915/mt7915.h
+++ b/mt7915/mt7915.h
@@ -621,7 +621,7 @@ int mt7915_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
 			  struct mt76_tx_info *tx_info);
 void mt7915_tx_token_put(struct mt7915_dev *dev);
 void mt7915_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info);
+			 struct sk_buff *skb);
 bool mt7915_rx_check(struct mt76_dev *mdev, void *data, int len);
 void mt7915_sta_ps(struct mt76_dev *mdev, struct ieee80211_sta *sta, bool ps);
 void mt7915_stats_work(struct work_struct *work);
diff --git a/mt7921/mac.c b/mt7921/mac.c
index 639614b0..7b15193c 100644
--- a/mt7921/mac.c
+++ b/mt7921/mac.c
@@ -692,7 +692,7 @@ bool mt7921_rx_check(struct mt76_dev *mdev, void *data, int len)
 EXPORT_SYMBOL_GPL(mt7921_rx_check);
 
 void mt7921_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info)
+			 struct sk_buff *skb)
 {
 	struct mt7921_dev *dev = container_of(mdev, struct mt7921_dev, mt76);
 	__le32 *rxd = (__le32 *)skb->data;
diff --git a/mt7921/mt7921.h b/mt7921/mt7921.h
index 13e4f16b..cd29f3c1 100644
--- a/mt7921/mt7921.h
+++ b/mt7921/mt7921.h
@@ -469,7 +469,7 @@ void mt7921_tx_worker(struct mt76_worker *w);
 void mt7921_tx_token_put(struct mt7921_dev *dev);
 bool mt7921_rx_check(struct mt76_dev *mdev, void *data, int len);
 void mt7921_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
-			 struct sk_buff *skb, u32 *info);
+			 struct sk_buff *skb);
 void mt7921_sta_ps(struct mt76_dev *mdev, struct ieee80211_sta *sta, bool ps);
 void mt7921_stats_work(struct work_struct *work);
 void mt7921_set_stream_he_caps(struct mt7921_phy *phy);
diff --git a/sdio.c b/sdio.c
index 228bc7d4..0ec308f9 100644
--- a/sdio.c
+++ b/sdio.c
@@ -395,7 +395,7 @@ mt76s_process_rx_queue(struct mt76_dev *dev, struct mt76_queue *q)
 		if (!e || !e->skb)
 			break;
 
-		dev->drv->rx_skb(dev, MT_RXQ_MAIN, e->skb, NULL);
+		dev->drv->rx_skb(dev, MT_RXQ_MAIN, e->skb);
 		e->skb = NULL;
 		nframes++;
 	}
diff --git a/usb.c b/usb.c
index 369c27ab..50d07d91 100644
--- a/usb.c
+++ b/usb.c
@@ -547,7 +547,7 @@ mt76u_process_rx_entry(struct mt76_dev *dev, struct urb *urb,
 		len -= data_len;
 		nsgs++;
 	}
-	dev->drv->rx_skb(dev, MT_RXQ_MAIN, skb, NULL);
+	dev->drv->rx_skb(dev, MT_RXQ_MAIN, skb);
 
 	return nsgs;
 }
-- 
2.30.2

